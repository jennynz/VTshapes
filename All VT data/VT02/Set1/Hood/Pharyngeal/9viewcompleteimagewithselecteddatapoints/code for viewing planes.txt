#gfx r nod curve
#gfx modify g_element new_curve node_points glyph sphere general size "1*1*1" centre 0,0,0 select_on material default selected_material default_selected


#(gfx change_id node_offset 100 element_offset 100 line_offset 100 face_offset 100)................edited by kalyan........................

while ($plane_number <= $max_plane_number) {

# load in a plane to project onto
   $plane_name = sprintf("plane%03d", $plane_number);
   gfx read node $slice_dir."/".$plane_name.".exnode";
   gfx read elem $slice_dir."/".$plane_name.".exelem";


# create a texture for each plane which will be used each time to evaluate
# the colour_slice field.  This is an unnecessary waste of textures, as we could
# otherwise just reuse the same texture over and over but doing it this way
# means we end up with all the textures showing in the slices in the correct places.
# Alternatively just make a single texture and set the $texture_name to point at it.
   $texture_name = $plane_name;
	gfx create texture $texture_name width 1 height 1 depth 0 clamp_wrap decal;
	gfx modify texture $texture_name linear;
	gfx create material $texture_name texture $texture_name;

# link up the plane just loaded to the material for this plane
   gfx modify g_element $plane_name surfaces material $texture_name texture_coord xi;

# evaluate the texture field colour_slice over the surface of the plane

   #We don't want the source fields depth so we specify_depth 1
   gfx modify texture $texture_name specify_width 260 specify_height 240 specify_depth 1 specify_format i evaluate element_group $plane_name element_dimension 2 field colour_slice spectrum gray_spectrum texture_coordinates xi;


gfx modify g_element $plane_name data_points glyph sphere general size "3*3*3" centre 0,0,0 select_on material default selected_material default_selected


   print "Processed plane $plane_number\n";
   $plane_number++;
}

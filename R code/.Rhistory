lines(vt02e[,2], col="blue")
title(main = "VT09 had vowel area functions")
legend(0,40,c("Interpolated on R and MATLAB","Interpolated in MATLAB only"), lty=c(1,1))
00),type="n", xlab="Data point", ylab="Cross-sectional area (mm^2)")
lines(unlist(allSpeakers.df[89,-(1:2)]), col="red")
vt02e <- read.table(paste(path,VTlist[9],"distance_area","had.txt",sep="\\"))
lines(vt02e[,2], col="blue")
title(main = "VT09 had vowel area functions")
legend(0,40,c("Inte
plot (c(0,29),c(0,500),type="n", xlab="Data point", ylab="Cross-sectional area (mm^2)")
lines(unlist(allSpeakers.df[89,-(1:2)]), col="red")
vt02e <- read.table(paste(path,VTlist[9],"distance_area","had.txt",sep="\\"))
lines(vt02e[,2], col="blue")
title(main = "VT09 had vowel area functions")
legend(0,40,c("Interpolated on R and MATLAB","Interpolated in MATLAB only"), lty=c(1,1))
plot (c(0,29),c(0,500),type="n", xlab="Data point", ylab="Cross-sectional area (mm^2)")
lines(unlist(allSpeakers.df[89,-(1:2)]), col="red")
vt02e <- read.table(paste(path,VTlist[9],"distance_area","had.txt",sep="\\"))
lines(vt02e[,2], col="blue")
title(main = "VT09 had vowel area functions")
legend(0,40,c("Interpolated on R and MATLAB","Interpolated in MATLAB only"), lty=c(1,1))
plot (c(0,29),c(0,600),type="n", xlab="Data point", ylab="Cross-sectional area (mm^2)")
lines(unlist(allSpeakers.df[89,-(1:2)]), col="red")
vt02e <- read.table(paste(path,VTlist[9],"distance_area","had.txt",sep="\\"))
lines(vt02e[,2], col="blue")
title(main = "VT09 had vowel area functions")
legend(0,80,c("Interpolated on R and MATLAB","Interpolated in MATLAB only"), lty=c(1,1))
plot (c(0,29),c(0,650),type="n", xlab="Data point", ylab="Cross-sectional area (mm^2)")
lines(unlist(allSpeakers.df[89,-(1:2)]), col="red")
vt02e <- read.table(paste(path,VTlist[9],"distance_area","had.txt",sep="\\"))
lines(vt02e[,2], col="blue")
title(main = "VT09 had vowel area functions")
legend(0,100,c("Interpolated on R and MATLAB","Interpolated in MATLAB only"), lty=c(1,1))
plot (c(0,29),c(0,700),type="n", xlab="Data point", ylab="Cross-sectional area (mm^2)")
lines(unlist(allSpeakers.df[89,-(1:2)]), col="red")
vt02e <- read.table(paste(path,VTlist[9],"distance_area","had.txt",sep="\\"))
lines(vt02e[,2], col="blue")
title(main = "VT09 had vowel area functions")
legend(0,100,c("Interpolated on R and MATLAB","Interpolated in MATLAB only"), lty=c(1,1))
title(main = "VT09 'had' vowel area functions")
plot (c(0,29),c(0,300),type="n", xlab="Data point", ylab="Cross-sectional area (mm^2)")
lines(unlist(allSpeakers.df[14,-(1:2)]), col="red")
vt02e <- read.table(paste(path,VTlist[2],"distance_area","head.txt",sep="\\"))
lines(vt02e[,2], col="blue")
title(main = "VT02 'head' vowel area functions")
legend(0,40,c("Interpolated on R and MATLAB","Interpolated in MATLAB only"), lty=c(1,1))
# VT09 had: Comparing linearly interpolated area function with raw distance_area txt from MATLAB
plot (c(0,29),c(0,700),type="n", xlab="Data point", ylab="Cross-sectional area (mm^2)")
lines(unlist(allSpeakers.df[89,-(1:2)]), col="red")
vt02e <- read.table(paste(path,VTlist[9],"distance_area","had.txt",sep="\\"))
lines(vt02e[,2], col="blue")
title(main = "VT09 'had' vowel area functions")
legend(0,100,c("Interpolated on R and MATLAB","Interpolated in MATLAB only"), lty=c(1,1))
help(legend)
legend(0,100,c("Interpolated on R and MATLAB","Interpolated in MATLAB only"), lty=c(1,1), col=par("col"))
legend(0,100,c("Interpolated on R and MATLAB","Interpolated in MATLAB only"), lty=c(1,1), col=par("col"))
legend(0,100,c("Interpolated on R and MATLAB","Interpolated in MATLAB only"), lty=c(1,1), col=c("red","blue"))
plot (c(0,29),c(0,700),type="n", xlab="Data point", ylab="Cross-sectional area (mm^2)")
lines(unlist(allSpeakers.df[89,-(1:2)]), col="red")
lines(vt02e[,2], col="blue")
title(main = "VT09 'had' vowel area functions")
legend(0,100,c("Interpolated on R and MATLAB","Interpolated in MATLAB only"), lty=c(1,1), col=c("red","blue"))
graphics.off() # close all graphics windows
plot (c(0,29),c(0,300),type="n", xlab="Data point", ylab="Cross-sectional area (mm^2)")
lines(unlist(allSpeakers.df[14,-(1:2)]), col="red")
vt02e <- read.table(paste(path,VTlist[2],"distance_area","head.txt",sep="\\"))
lines(vt02e[,2], col="blue")
title(main = "VT02 'head' vowel area functions")
legend(0,40,c("Interpolated on R and MATLAB","Interpolated in MATLAB only"), lty=c(1,1), col=c("red","blue"))
# VT09 had: Comparing linearly interpolated area function with raw distance_area txt from MATLAB
plot (c(0,29),c(0,700),type="n", xlab="Data point", ylab="Cross-sectional area (mm^2)")
lines(unlist(allSpeakers.df[89,-(1:2)]), col="red")
vt02e <- read.table(paste(path,VTlist[9],"distance_area","had.txt",sep="\\"))
lines(vt02e[,2], col="blue")
title(main = "VT09 'had' vowel area functions")
legend(0,100,c("Interpolated on R and MATLAB","Interpolated in MATLAB only"), lty=c(1,1), col=c("red","blue"))
plot (c(0,29),c(0,300),type="n", xlab="Data point", ylab="Cross-sectional area (mm^2)")
lines(unlist(allSpeakers.df[14,-(1:2)]), col="red")
vt02e <- read.table(paste(path,VTlist[2],"distance_area","head.txt",sep="\\"))
lines(vt02e[,2], col="blue")
title(main = "VT02 'head' vowel area functions")
legend(0, 40, c("Interpolated on R","Raw area function"), lty=c(1,1), col=c("red","blue"))
# VT09 had: Comparing linearly interpolated area function with raw distance_area txt from MATLAB
plot (c(0,29),c(0,700),type="n", xlab="Data point", ylab="Cross-sectional area (mm^2)")
lines(unlist(allSpeakers.df[89,-(1:2)]), col="red")
vt02e <- read.table(paste(path,VTlist[9],"distance_area","had.txt",sep="\\"))
lines(vt02e[,2], col="blue")
title(main = "VT09 'had' vowel area functions")
legend(0, 100, c("Interpolated on R","Raw area function"), lty=c(1,1), col=c("red","blue"))
cor.test(pc.VTareas$x[,1],pc.resfreqIV$x[,1])
pca
pca <- NULL
for(i in numVTs){
spk <- VTlist[i]
spkData <- allSpeakers.df[grep(spk, allSpeakers.df$spk),4:30]
spkPCA <- prcomp(~., data=na.omit(allSpeakers.df[,4:30]/maxArea), scale=T)
pca[i] <- spkPCA
}
pca[1]
allSpeakers.df
allSpeakers.df[1:11,4:30]
vt1pca <- prcomp(~., data=na.omit(allSpeakers.df[1:11,4:30]/maxArea), scale=T)
vt2pca <- prcomp(~., data=na.omit(allSpeakers.df[12:22,4:30]/maxArea), scale=T)
vt1pca
levels(vt1pca)
vt1pca$rotation
cor.test(vt1pca$rotation, vt2pca$rotation)
vt1pca$rotation[,1]
vt2pca$rotation[,1]
cor.test(vt1pca$rotation[,1], vt2pca$rotation[,1])
cor.test(vt1pca$rotation[,1], vt1pca$rotation[,1])
plot(vt2pca$rotation[,1])
lines(vt1pca$rotation[,1])
plot (c(0,29),c(0,300),type="n", xlab="Data point", ylab="Cross-sectional area (mm^2)")
lines(vt1pca$rotation[,1], col="red")
lines(vvt2pca$rotation[,1], col="blue")
title(main = "PC1 for VT01 and VT02 area function data points")
legend(0, 40, c("VT01","VT02"), lty=c(1,1), col=c("red","blue"))
plot(type="n", xlab="Data point", ylab="Cross-sectional area (mm^2)")
lines(vt1pca$rotation[,1], col="red")
lines(vvt2pca$rotation[,1], col="blue")
title(main = "PC1 for VT01 and VT02 area function data points")
legend(0, 40, c("VT01","VT02"), lty=c(1,1), col=c("red","blue"))
plot(type="n", xlab="Data point", ylab="Cross-sectional area (mm^2)")
plot(c(0,28),c(0,0.5),type="n", xlab="Data point", ylab="Cross-sectional area (mm^2)")
plot(c(0,28),c(0,0.5),type="n", xlab="Data point", ylab="Cross-sectional area (mm^2)")
lines(vt1pca$rotation[,1], col="red")
lines(vvt2pca$rotation[,1], col="blue")
title(main = "PC1 for VT01 and VT02 area function data points")
legend(0, 40, c("VT01","VT02"), lty=c(1,1), col=c("red","blue"))
plot(c(0,28),c(-0.5,0.5),type="n", xlab="Data point", ylab="Cross-sectional area (mm^2)")
lines(vt1pca$rotation[,1], col="red")
lines(vvt2pca$rotation[,1], col="blue")
title(main = "PC1 for VT01 and VT02 area function data points")
legend(0, 40, c("VT01","VT02"), lty=c(1,1), col=c("red","blue"))
plot(c(0,28),c(-0.5,0.5),type="n", xlab="Data point", ylab="Cross-sectional area (mm^2)")
lines(vt1pca$rotation[,1], col="red")
lines(vt2pca$rotation[,1], col="blue")
title(main = "PC1 for VT01 and VT02 area function data points")
legend(0, 40, c("VT01","VT02"), lty=c(1,1), col=c("red","blue"))
plot(c(0,28),c(-0.4,0.4),type="n", xlab="Data point", ylab="Cross-sectional area (mm^2)")
lines(vt1pca$rotation[,1], col="red")
lines(vt2pca$rotation[,1], col="blue")
title(main = "PC1 for VT01 and VT02 area function data points")
legend(0, -0.3, c("VT01","VT02"), lty=c(1,1), col=c("red","blue"))
cor.test(vt1pca$rotation[,1], vt2pca$rotation[,1])
source('~/Part IV Project/R code/readAreaFunctions_1Set.R', echo=TRUE)
.libPaths('H:/Documents/Rlibraries')
library('emuR')
# Normalise for maximum area in each shape to eliminate interspeaker effects
# Excluding first column X1 because of unreliability of first frame of MRI images (lips are usually poorly defined), and last column X29
# e.g. VT09 shapes much bigger than others.
maxArea=apply(allSpeakers.df[,4:30],1,max)
pca <- prcomp(~., data=na.omit(allSpeakers.df[,4:30]/maxArea), scale=T)
pca.summ <- summary(pca)
levels(allSpeakers.df$vow) <- c("æ", "ɑː", "e", "iː", "ɜː", "ɪ", "ɔː", "ɒ", "ʊ", "ʌ", "uː")
colpalette <- c("firebrick4","chocolate4","darkgoldenrod","chartreuse4","aquamarine4","darkcyan","deepskyblue4","darkslateblue","darkorchid4","deeppink4","indianred4")
# Plot of PC1 and PC2, all vowels
eplot(pca$x[,1:2], labs=as.character(allSpeakers.df[,2]), centroid=F, formant=T, col=colpalette, doellipse = T, dopoints = T)
title(main = "Vowel properties (12 VTs x 1 Sets)", xlab = "PC1", ylab = "PC2")
# Compare with old 12VT1Set plot where hood was huddled in corner.
eplot(pca$x[,1:2], labs=as.character(allSpeakers.df[,2]), centroid=F, formant=T, col=colpalette, doellipse = F, dopoints = T, xlim = c(-6,6), ylim = c(-6, 6))
title(main = "Vowel properties (12 VTs x 1 Sets)", xlab = "PC1", ylab = "PC2")
# Plot of PC1 and PC2, centroids only
eplot(pca$x[,1:2], labs=as.character(allSpeakers.df[,2]), centroid=T, formant=T, col=colpalette, doellipse = T)
title(main = "Centroids of combined vowel properties (12 VTs x 1 Set)", xlab = "PC1", ylab = "PC2")
# Plot of standard deviations
plot(pca$sdev, type="p", xlab="Principal component #", ylab="Standard deviation")
title(main = "Standard deviations of principal components from combined dataset (12 VTs x 1 Set)")
# Plot of proportions of variance
pca.var <- pca.summ$importance[2,]
plot(pca.var, type="p", xlab="Principal component #", ylab="% Variance")
title(main = "Proportion of variance explained by principal components (12 VTs x 1 Set)")
# VT02 head: Comparing linearly interpolated area function with raw distance_area txt from MATLAB
plot (c(0,29),c(0,300),type="n", xlab="Data point", ylab="Cross-sectional area (mm^2)")
lines(unlist(allSpeakers.df[14,-(1:2)]), col="red")
vt02e <- read.table(paste(path,VTlist[2],"Set1","distance_area","head.txt",sep="\\"))
lines(vt02e[,2], col="blue")
title(main = "VT02 'head' vowel area functions")
legend(0, 40, c("Interpolated on R","Raw area function"), lty=c(1,1), col=c("red","blue"))
# VT09 had: Comparing linearly interpolated area function with raw distance_area txt from MATLAB
plot (c(0,29),c(0,700),type="n", xlab="Data point", ylab="Cross-sectional area (mm^2)")
lines(unlist(allSpeakers.df[89,-(1:2)]), col="red")
vt02e <- read.table(paste(path,VTlist[9],"Set1","distance_area","had.txt",sep="\\"))
lines(vt02e[,2], col="blue")
title(main = "VT09 'had' vowel area functions")
legend(0, 100, c("Interpolated on R","Raw area function"), lty=c(1,1), col=c("red","blue"))
setwd("~/Part IV Project/R code")
source('~/Part IV Project/R code/readAreaFunctions_1Set.R', echo=TRUE)
levels(allSpeakers.df$vow) <- c("æ", "ɑː", "e", "iː", "ɜː", "ɪ", "ɔː", "ɒ", "ʊ", "ʌ", "uː")
.libPaths('H:/Documents/Rlibraries')
library('emuR')
maxArea <- apply(allSpeakers.df[,4:30],1,max)
# PCA
all.pca <- prcomp(~., data = allSpeakers.df[,4:30]/maxArea, scale=T)
all.pca.summ <- summary(all.pca)
noVT2 <- c(1:11,23:132)
combined.pca <- prcomp(~., data = (allSpeakers.df[noVT2,4:30] / maxArea[noVT2]), scale=T)
combined.pca.summ <- summary(combined.pca)
vt02.pca <- prcomp(~., data = (allSpeakers.df[12:22,4:30] / maxArea[12:22]), scale=T)
vt02.pca.summ <- summary(vt02.pca)
# Plot of PC1 and PC2, centroids of combined dataset with VT02 superimposed
# eplot(combined.pca$x[,1:2], labs=as.character(allSpeakers.df[noVT2,2]), centroid=T, col=F, formant=T, doellipse = F, xlim=c(-5,5), ylim=c(-6,6))
# par(new=TRUE)
# eplot(vt02.pca$x[,1:2], labs=as.character(allSpeakers.df[12:22,2]), centroid=T, col="red", formant=T, doellipse = F, xlim=c(-5,5), ylim=c(-6,6))
# title(main = "Comparison against vowel PCs for NZE and AE", xlab = "PC1", ylab = "PC2")
# legend(x="bottomleft", legend=c("Centroids", "VT02"), col=c("black","red"), lwd=1, pch=c(NA,NA))
# More comparable to vowel quad
# eplot(combined.pca$x[,1:2], labs=as.character(allSpeakers.df[noVT2,2]), centroid=T, col=F, formant=F, doellipse = F, xlim=c(-5,5), ylim=c(-6,6))
# points(vt02.pca$x[,1], vt02.pca$x[,2], pch=as.character(allSpeakers.df[12:22,2]), col="red")
## Bark scaling
eplot(combined.pca$x[,1:2], labs=as.character(allSpeakers.df[noVT2,2]), axes=F, centroid=T, col=F, doellipse = F, xlim=c(-0.62,-0.46), ylim=c(-0.61,-0.47), scaling = "bark")
par(new=TRUE)
eplot(vt02.pca$x[,1:2], labs=as.character(allSpeakers.df[12:22,2]), axes=F, centroid=T, col="red", xlim=c(-0.62,-0.46), ylim=c(-0.61,-0.47), scaling = "bark")
title(main = "Comparison of vowel PCs in NZE and AE (Bark scaled)", xlab = "PC1", ylab = "PC2")
legend(x=-0.62, y=-0.47, legend=c("NZE Centroids", "VT02"), col=c("black","red"), lwd=1, pch=c(NA,NA))
xticks = seq(-0.62,-0.46,by=0.02)
yticks = seq(-0.60,-0.48,by=0.02)
axis(side = 1, at = xticks, labels = xticks)
axis(side = 2, at = yticks, labels = yticks)
i = 1
j = 2
allSpeakers.df[((i-1)*10 + i):(i*10 + i),4:30]
allSpeakers.df[((i-1)*10 + i):(i*10 + i),1:5]
levels(allSpeakers.df$vow) <- vowelNames
allSpeakers.df[((i-1)*10 + i):(i*10 + i),1:5]
allSpeakers.df[((i-1)*10 + i+5),1:5]
allSpeakers.df[((i-1)*10 + i+5),4:30]
maxArea[((i-1)*10 + i + 5)]
m <- ((i-1)*10 + i + 5)
allSpeakers.df[m, 4:30] / maxArea[m]
153.186/554.8441
348.0735/554.8441
vowelNames
comparedVowels <- vowelNames[c(1, 6, 9, 11)]
comparedVowels
vowelNames[c(1, 4, 6, 9, 11_]
vowelNames[c(1, 4, 6, 9, 11]
vowelNames[c(1, 4, 6, 9, 11)]
for (x in c(1, 4, 6, 9)) {}
for (x in c(1, 4, 6, 9)) {cat("\n Number:", x, sep="")}
x
x = 6
m <- ((i-1)*10 + i + (x-1))
n <- ((j-1)*10 + j + (x-1))
allSpeakers.df[m, 4:30] / maxArea[m]
allSpeakers.df[n, 4:30]
allSpeakers.df[n, 1:5]
matrix(data = c(vowelNames[x], NA), nrow = 1, ncol = numVTs-1, byrow = TRUE)
namerow <- matrix(data = NA, nrow = 1, ncol = numVTs-1, byrow = TRUE)
namerow[1] <- vowelNames[x]
namerow
prow <- matrix(data = NA, nrow = 1, ncol = numVTs-1, byrow = TRUE)
prow[1] <- paste(vowelNames[x], "P-values", sep=" ")
prow
p <- 1
# Normalise?
isNorm <- T
# Vowels to analyse: had, heed, HID, hood, who'd
compVowels.i <- c(1, 4, 6, 9, 11)
for (x in compVowels.i) {
# Initialise correlation tables
corr <- matrix(data = NA, nrow = numVTs-1, ncol = numVTs-1, byrow = TRUE)
colnames(corr) <- VTlist[-1]
rownames(corr) <- VTlist[-numVTs]
pval <- matrix(data = NA, nrow = numVTs-1, ncol = numVTs-1, byrow = TRUE)
colnames(pval) <- VTlist[-1]
rownames(pval) <- VTlist[-numVTs]
namerow <- matrix(data = NA, nrow = 1, ncol = numVTs-1, byrow = TRUE)
namerow[1] <- vowelNames[x]
namerowabs <- matrix(data = NA, nrow = 1, ncol = numVTs-1, byrow = TRUE)
namerowabs[1] <- paste(vowelNames[x], "absolute values", sep=" ")
prow <- matrix(data = NA, nrow = 1, ncol = numVTs-1, byrow = TRUE)
prow[1] <- paste(vowelNames[x], "P-values", sep=" ")
# Correlations between each of 12 speakers
for(i in 1:numVTs) {
j <- i + 1
while(j <= numVTs) {
# Indices
m <- ((i-1)*10 + i + (x-1))
n <- ((j-1)*10 + j + (x-1))
# Individual speaker PCAs with normalised area functions
if (isNorm == T) {
pca1 <- prcomp(~., data = allSpeakers.df[m, 4:30] / maxArea[m], scale=T)
pca2 <- prcomp(~., data = allSpeakers.df[n, 4:30] / maxArea[n], scale=T)
} else {
pca1 <- prcomp(~., data = allSpeakers.df[m, 4:30], scale=T)
pca2 <- prcomp(~., data = allSpeakers.df[n, 4:30], scale=T)
}
# Interspeaker correlations
cor <- cor.test(pca1$x[,p], pca2$x[,p])
# Write to tables
corr[i,j-1] <- unname(cor$estimate)
pvalues[i,j-1] <- unname(cor$p.value)
j <- j + 1
}
}
# Append correlation tables to file
table <- rbind(namerow, corr, namerowabs, abs(corr), prow, pvalues)
}
prcomp(~., data = allSpeakers.df[m, 4:30] / maxArea[m], scale=T)
prcomp(~., data = allSpeakers.df[m, 4:30] / maxArea[m])
allSpeakers.df[m, 4:30] / maxArea[m]
prcomp(~., data = allSpeakers.df[m, 4:30] / maxArea[m], scale=T)
allSpeakers.df[c(m, m+1), 4:30] / maxArea[m]
allSpeakers.df[c(m, m+1), -c((4:15))] / maxArea[m]
allSpeakers.df[c(m, m+1), -c(1:3,17:30)] / maxArea[m]
allSpeakers.df[c(m, m+1), -c(4:16)] / maxArea[m]
allSpeakers.df[c(m, m+1), c(1:3,17:30)] / maxArea[m]
c(1:3,17:30)
allSpeakers.df[c(m, m+1), c(1:3,17:30)]
allSpeakers.df[c(m, m+1), -c(3:16)]
allSpeakers.df[c(m, m+1), -c(3:16,31)]
allSpeakers.df[c(m, m+1), -c(1:16,31)]
1:p.max
source('//uoa.auckland.ac.nz/engdfs/Home/jsah166/Documents/Part IV Project/R code/correlations_inter_pharyngeal.R', echo=TRUE)
table
source('//uoa.auckland.ac.nz/engdfs/Home/jsah166/Documents/Part IV Project/R code/correlations_inter_pharyngeal.R', echo=TRUE)
table <- []
table <- NA
source('//uoa.auckland.ac.nz/engdfs/Home/jsah166/Documents/Part IV Project/R code/correlations_inter_pharyngeal.R', echo=TRUE)
source('//uoa.auckland.ac.nz/engdfs/Home/jsah166/Documents/Part IV Project/R code/correlations_inter_pharyngeal.R', echo=TRUE)
source('~/Part IV Project/R code/plotAreaFunctions.R', echo=TRUE)
source('~/Part IV Project/R code/plotAreaFunctions.R', echo=TRUE)
rm(list=ls()) # clear workspace
graphics.off() # close all graphics windows
path<<-"H:\\Documents\\Part IV Project\\All VT data"
# List of VT name strings (VT01, VT02...)
VTlist <- list.dirs(path, recursive=FALSE, full.names=FALSE)
numVTs <- length(VTlist)
# List of vowel names (hadd, heed...)
areaFiles <- dir(paste(path,VTlist[1],"Set1","distance_area",sep="\\"))
numVowels <- length(areaFiles)
vowelNames <- vector(length=numVowels)
for(i in 1:numVowels) {
vowelNames[i] <- unlist(strsplit(areaFiles[i],"\\."))[1] # Remove .txt
}
cols.warm <- c("red", "maroon", "orange", "yellow")
cols.cold <- c("green1", "green4", "aquamarine3", "blue4")
cols.dark <- c("maroon", "blue4", "blue1", "purple")
cols.warm <- c("red", "maroon", "orange", "yellow")
cols.all <- c(cols.warm, cols.cold, cols.dark)
cols.all <- c(cols.warm, cols.cold, cols.dark)
vowelNames
plotMRI.front(spk="VT01",xlim=c(0,190),ylim=c(0,650))
"plotMRI.front"<-function(spk,xlim=c(0,175),ylim=c(0,510))
{
for (i in c(1,3,4,5)) {
plotMRI(vow=vowelNames[i], col=cols.warm[i], xlim=xlim, ylim=ylim, spk=spk)
par(new=T)
cat("\n ", vowelNames[i], sep="")
}
title(paste("Front vowels for ",spk))
}
"plotMRI"<-function(spk,vow="had",col="red",xlim=c(0,180),ylim=c(0,250))
{
fullpath=paste(path,spk,"Set1","distance_area",paste(vow,"txt",sep="."),sep="\\")
datfile=read.table(fullpath)
plot(datfile[,1],datfile[,2],type="l",col=col,xlim=xlim,ylim=ylim,xlab="distance from lips",ylab="cross-sectional area")
}
plotMRI.front(spk="VT09",xlim=c(0,205),ylim=c(0,780))
plotMRI.front(spk="VT10",xlim=c(0,190),ylim=c(0,650))
vowelNames
vowelNames[5, 6, 9, 11]
vowelNames[5, 6, 8, 10]
vowelNames[c(5, 6, 8, 10)]
vowelNames[c(5, 6, 9, 11)]
vowels <- "all"
switch(vowels,
"all" = {indices <- 1:numVowels},
"front" = {indices <- c(1,3,4,5)},
"back" = {indices <- c(2, 7, 8, 9, 10)},
"mid" = {indices <- c(5, 6, 9, 11)},
"high" = {indices <- c(1,3,4,5)},
"cen" = {indices <- c(1,3,4,5)}
)
vowels <- "cen"
switch(vowels,
"all" = {indices <- 1:numVowels},
"front" = {indices <- c(1,3,4,5)},
"back" = {indices <- c(2, 7, 8, 9, 10)},
"mid" = {indices <- c(5, 6, 9, 11)},
"high" = {indices <- c(1,3,4,5)},
"cen" = {indices <- c(1,3,4,5)}
)
vowelNames
vowelNames[4,7,11]
vowelNames[c(4,7,11)]
vowelNames[c(1, 3, 5, 6, 10)]
VTlist
for (v in VTlist) {
maxVTvals(spk=v)
}
"maxVTvals"<-function(spk)
{
Dirpath=paste(path,spk,"Set1","distance_area",sep="\\")
filesInDir=dir(Dirpath)
alldat=NULL
for(i in 1:length(filesInDir))
{
filepath=paste(Dirpath,filesInDir[i],sep="\\")
datfile=read.table(filepath)
alldat=rbind(alldat,datfile)
}
return(apply(alldat,2,max))
}
for (v in VTlist) {
maxVTvals(spk=v)
}
"makeplot"<-function(spk, vow="had", col="red", xlim=c(0,180), ylim=c(0,250))
{
fullpath=paste(path,spk,"Set1","distance_area",paste(vow,"txt",sep="."),sep="\\")
datfile=read.table(fullpath)
plot(datfile[,1],datfile[,2],type="l",col=col,xlim=xlim,ylim=ylim,xlab="distance from lips",ylab="cross-sectional area")
}
"plotMRI"<-function(spk, vowels="All", xlim=c(0,175), ylim=c(0,510))
{
switch(vowels,
"All" = {indices <- 1:numVowels},
"Front" = {indices <- c(1,3,4,5)},
"Back" = {indices <- c(2, 7, 8, 9, 10)},
"Mid" = {indices <- c(5, 6, 9, 11)},
"High" = {indices <- c(4, 7, 11)},
"Central" = {indices <- c(1, 3, 5, 6, 10)}
)
for (i in indices) {
makeplot(vow=vowelNames[i], col=cols.all[i], xlim=xlim, ylim=ylim, spk=spk)
par(new=T)
}
title(paste(vowels, " vowels for ", spk))
}
x <- c(190, 190, 175, 175, 155, 190, 190, 160, 205, 190, 190, 195)
y <- c(650, 650, 510, 510, 400, 650, 650, 640, 780, 650, 650, 890)
dev.new()
par(mfrow=c(3,4),lwd=1)
for (i in numVTs) {
plotMRI(spk = VTlist[i], vowels = "Front", xlim = c(0,x[i]), ylim = c(0,y[i]))
}
dev.new()
par(mfrow=c(3,4),lwd=1)
for (i in 1:numVTs) {
plotMRI(spk = VTlist[i], vowels = "Front", xlim = c(0,x[i]), ylim = c(0,y[i]))
}
source('~/Part IV Project/R code/plotAreaFunctions.R', echo=TRUE)
VTlist[2]
VTlist[2]
for (i in 1:numVTs) {
plotMRI(spk = VTlist[i], vowels = "Central", xlim = c(0,x[i]), ylim = c(0,y[i]))
}
source('//uoa.auckland.ac.nz/engdfs/Home/jsah166/Documents/Part IV Project/R code/correlations_intra_pharyngeal.R', echo=TRUE)
se1
set1
set2
allSpeakers.df
set1 <- allSpeakers.df[index1,-c(1:16,30:31)]
set1
allSpeakers.df[index1,-c(1:17,30:31)]
allSpeakers.df[index1,-c(1:17,29:31)]
allSpeakers.df[index1, -c(1:28)]
allSpeakers.df[index1,-c(1:17)]
allSpeakers.df[index1,-c(1:17,32)]
source('//uoa.auckland.ac.nz/engdfs/Home/jsah166/Documents/Part IV Project/R code/correlations_intra_pharyngeal.R', echo=TRUE)
allSpeakers.df[index1,-c(18:31)]
allSpeakers.df[index1,c(18:31)]
allSpeakers.df[index1, -c(18:32)]
allSpeakers.df[index1, c(18:32)]
allSpeakers.df[index1, c(4:17)]
allSpeakers.df[1, c(5:17)]
length(allSpeakers.df[1, c(5:17)])
length(allSpeakers.df[1, -c(1:17,32)])
allSpeakers.df[1, -c(1:17,32)]
length(allSpeakers.df[1, c(5:18)])
allSpeakers.df[1, c(5:18)]
paste("correlations_intra_", cavity, "_norm.csv")
cavity <- o
cavity <- "o"
switch(cavity,
"o" = {
cavity.index <- c(5:18)
cavity <- "oral"
}, "p" = {
cavity.index <- -c(1:17,32)
cavity <- "pharyngeal"
}
)
paste("correlations_intra_", cavity, "_norm.csv")
source('//uoa.auckland.ac.nz/engdfs/Home/jsah166/Documents/Part IV Project/R code/correlations_intra_pharyngeal.R', echo=TRUE)
cavity.index <- c(4:17)
allSpeakers.df[1, cavity.index]
cavity.index
allSpeakers.df[1,]
source('~/Part IV Project/R code/readAreaFunctions_1Set.R', echo=TRUE)
allSpeakers.df[1, cavity.index]
# Principal components to analyse
p.max <- 3
# Normalise?
isNorm <- T
# Oral (o) or pharyngeal (p)?
cavity <- "o"
switch(cavity,
"o" = {
cavity.index <- c(4:17)
cavity <- "oral"
}, "p" = {
cavity.index <- -c(1:16,31)
cavity <- "pharyngeal"
}
)
allSpeakers.df[1, cavity.index]
source('//uoa.auckland.ac.nz/engdfs/Home/jsah166/Documents/Part IV Project/R code/correlations_inter_pharyngeal.R', echo=TRUE)
table
write.csv(table, file = paste("corr_inter_", cavity, "_norm.csv", sep=""))
